/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ABPr2 extends PPr2
{
    private TMinus _minus_;
    private PF _f_;
    private TMayus _mayus_;

    public ABPr2()
    {
        // Constructor
    }

    public ABPr2(
        @SuppressWarnings("hiding") TMinus _minus_,
        @SuppressWarnings("hiding") PF _f_,
        @SuppressWarnings("hiding") TMayus _mayus_)
    {
        // Constructor
        setMinus(_minus_);

        setF(_f_);

        setMayus(_mayus_);

    }

    @Override
    public Object clone()
    {
        return new ABPr2(
            cloneNode(this._minus_),
            cloneNode(this._f_),
            cloneNode(this._mayus_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABPr2(this);
    }

    public TMinus getMinus()
    {
        return this._minus_;
    }

    public void setMinus(TMinus node)
    {
        if(this._minus_ != null)
        {
            this._minus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._minus_ = node;
    }

    public PF getF()
    {
        return this._f_;
    }

    public void setF(PF node)
    {
        if(this._f_ != null)
        {
            this._f_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._f_ = node;
    }

    public TMayus getMayus()
    {
        return this._mayus_;
    }

    public void setMayus(TMayus node)
    {
        if(this._mayus_ != null)
        {
            this._mayus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mayus_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._minus_)
            + toString(this._f_)
            + toString(this._mayus_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._minus_ == child)
        {
            this._minus_ = null;
            return;
        }

        if(this._f_ == child)
        {
            this._f_ = null;
            return;
        }

        if(this._mayus_ == child)
        {
            this._mayus_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._minus_ == oldChild)
        {
            setMinus((TMinus) newChild);
            return;
        }

        if(this._f_ == oldChild)
        {
            setF((PF) newChild);
            return;
        }

        if(this._mayus_ == oldChild)
        {
            setMayus((TMayus) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
