/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AA extends PA
{
    private TPerro _perro_;

    public AA()
    {
        // Constructor
    }

    public AA(
        @SuppressWarnings("hiding") TPerro _perro_)
    {
        // Constructor
        setPerro(_perro_);

    }

    @Override
    public Object clone()
    {
        return new AA(
            cloneNode(this._perro_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAA(this);
    }

    public TPerro getPerro()
    {
        return this._perro_;
    }

    public void setPerro(TPerro node)
    {
        if(this._perro_ != null)
        {
            this._perro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._perro_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._perro_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._perro_ == child)
        {
            this._perro_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._perro_ == oldChild)
        {
            setPerro((TPerro) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
