/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ANum extends PNum
{
    private TCo _co_;
    private TN _n_;
    private TCo _a_;
    private TCo _b_;

    public ANum()
    {
        // Constructor
    }

    public ANum(
        @SuppressWarnings("hiding") TCo _co_,
        @SuppressWarnings("hiding") TN _n_,
        @SuppressWarnings("hiding") TCo _a_,
        @SuppressWarnings("hiding") TCo _b_)
    {
        // Constructor
        setCo(_co_);

        setN(_n_);

        setA(_a_);

        setB(_b_);

    }

    @Override
    public Object clone()
    {
        return new ANum(
            cloneNode(this._co_),
            cloneNode(this._n_),
            cloneNode(this._a_),
            cloneNode(this._b_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANum(this);
    }

    public TCo getCo()
    {
        return this._co_;
    }

    public void setCo(TCo node)
    {
        if(this._co_ != null)
        {
            this._co_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._co_ = node;
    }

    public TN getN()
    {
        return this._n_;
    }

    public void setN(TN node)
    {
        if(this._n_ != null)
        {
            this._n_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._n_ = node;
    }

    public TCo getA()
    {
        return this._a_;
    }

    public void setA(TCo node)
    {
        if(this._a_ != null)
        {
            this._a_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._a_ = node;
    }

    public TCo getB()
    {
        return this._b_;
    }

    public void setB(TCo node)
    {
        if(this._b_ != null)
        {
            this._b_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._b_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._co_)
            + toString(this._n_)
            + toString(this._a_)
            + toString(this._b_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._co_ == child)
        {
            this._co_ = null;
            return;
        }

        if(this._n_ == child)
        {
            this._n_ = null;
            return;
        }

        if(this._a_ == child)
        {
            this._a_ = null;
            return;
        }

        if(this._b_ == child)
        {
            this._b_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._co_ == oldChild)
        {
            setCo((TCo) newChild);
            return;
        }

        if(this._n_ == oldChild)
        {
            setN((TN) newChild);
            return;
        }

        if(this._a_ == oldChild)
        {
            setA((TCo) newChild);
            return;
        }

        if(this._b_ == oldChild)
        {
            setB((TCo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
