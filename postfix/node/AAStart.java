/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AAStart extends PStart
{
    private TSvg1 _svg1_;
    private TMayus _mayus_;
    private PPr _pr_;
    private TSvg2 _svg2_;

    public AAStart()
    {
        // Constructor
    }

    public AAStart(
        @SuppressWarnings("hiding") TSvg1 _svg1_,
        @SuppressWarnings("hiding") TMayus _mayus_,
        @SuppressWarnings("hiding") PPr _pr_,
        @SuppressWarnings("hiding") TSvg2 _svg2_)
    {
        // Constructor
        setSvg1(_svg1_);

        setMayus(_mayus_);

        setPr(_pr_);

        setSvg2(_svg2_);

    }

    @Override
    public Object clone()
    {
        return new AAStart(
            cloneNode(this._svg1_),
            cloneNode(this._mayus_),
            cloneNode(this._pr_),
            cloneNode(this._svg2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAStart(this);
    }

    public TSvg1 getSvg1()
    {
        return this._svg1_;
    }

    public void setSvg1(TSvg1 node)
    {
        if(this._svg1_ != null)
        {
            this._svg1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._svg1_ = node;
    }

    public TMayus getMayus()
    {
        return this._mayus_;
    }

    public void setMayus(TMayus node)
    {
        if(this._mayus_ != null)
        {
            this._mayus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mayus_ = node;
    }

    public PPr getPr()
    {
        return this._pr_;
    }

    public void setPr(PPr node)
    {
        if(this._pr_ != null)
        {
            this._pr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pr_ = node;
    }

    public TSvg2 getSvg2()
    {
        return this._svg2_;
    }

    public void setSvg2(TSvg2 node)
    {
        if(this._svg2_ != null)
        {
            this._svg2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._svg2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._svg1_)
            + toString(this._mayus_)
            + toString(this._pr_)
            + toString(this._svg2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._svg1_ == child)
        {
            this._svg1_ = null;
            return;
        }

        if(this._mayus_ == child)
        {
            this._mayus_ = null;
            return;
        }

        if(this._pr_ == child)
        {
            this._pr_ = null;
            return;
        }

        if(this._svg2_ == child)
        {
            this._svg2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._svg1_ == oldChild)
        {
            setSvg1((TSvg1) newChild);
            return;
        }

        if(this._mayus_ == oldChild)
        {
            setMayus((TMayus) newChild);
            return;
        }

        if(this._pr_ == oldChild)
        {
            setPr((PPr) newChild);
            return;
        }

        if(this._svg2_ == oldChild)
        {
            setSvg2((TSvg2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
