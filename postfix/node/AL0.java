/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AL0 extends PL0
{
    private PCoorx _coorx_;
    private PCoory _coory_;
    private PCoorx2 _coorx2_;
    private PCoory2 _coory2_;

    public AL0()
    {
        // Constructor
    }

    public AL0(
        @SuppressWarnings("hiding") PCoorx _coorx_,
        @SuppressWarnings("hiding") PCoory _coory_,
        @SuppressWarnings("hiding") PCoorx2 _coorx2_,
        @SuppressWarnings("hiding") PCoory2 _coory2_)
    {
        // Constructor
        setCoorx(_coorx_);

        setCoory(_coory_);

        setCoorx2(_coorx2_);

        setCoory2(_coory2_);

    }

    @Override
    public Object clone()
    {
        return new AL0(
            cloneNode(this._coorx_),
            cloneNode(this._coory_),
            cloneNode(this._coorx2_),
            cloneNode(this._coory2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAL0(this);
    }

    public PCoorx getCoorx()
    {
        return this._coorx_;
    }

    public void setCoorx(PCoorx node)
    {
        if(this._coorx_ != null)
        {
            this._coorx_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coorx_ = node;
    }

    public PCoory getCoory()
    {
        return this._coory_;
    }

    public void setCoory(PCoory node)
    {
        if(this._coory_ != null)
        {
            this._coory_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coory_ = node;
    }

    public PCoorx2 getCoorx2()
    {
        return this._coorx2_;
    }

    public void setCoorx2(PCoorx2 node)
    {
        if(this._coorx2_ != null)
        {
            this._coorx2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coorx2_ = node;
    }

    public PCoory2 getCoory2()
    {
        return this._coory2_;
    }

    public void setCoory2(PCoory2 node)
    {
        if(this._coory2_ != null)
        {
            this._coory2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coory2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._coorx_)
            + toString(this._coory_)
            + toString(this._coorx2_)
            + toString(this._coory2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._coorx_ == child)
        {
            this._coorx_ = null;
            return;
        }

        if(this._coory_ == child)
        {
            this._coory_ = null;
            return;
        }

        if(this._coorx2_ == child)
        {
            this._coorx2_ = null;
            return;
        }

        if(this._coory2_ == child)
        {
            this._coory2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._coorx_ == oldChild)
        {
            setCoorx((PCoorx) newChild);
            return;
        }

        if(this._coory_ == oldChild)
        {
            setCoory((PCoory) newChild);
            return;
        }

        if(this._coorx2_ == oldChild)
        {
            setCoorx2((PCoorx2) newChild);
            return;
        }

        if(this._coory2_ == oldChild)
        {
            setCoory2((PCoory2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
