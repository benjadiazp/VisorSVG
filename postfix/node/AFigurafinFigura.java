/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class AFigurafinFigura extends PFigura
{
    private PFigura _figura_;
    private PFig1 _fig1_;

    public AFigurafinFigura()
    {
        // Constructor
    }

    public AFigurafinFigura(
        @SuppressWarnings("hiding") PFigura _figura_,
        @SuppressWarnings("hiding") PFig1 _fig1_)
    {
        // Constructor
        setFigura(_figura_);

        setFig1(_fig1_);

    }

    @Override
    public Object clone()
    {
        return new AFigurafinFigura(
            cloneNode(this._figura_),
            cloneNode(this._fig1_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFigurafinFigura(this);
    }

    public PFigura getFigura()
    {
        return this._figura_;
    }

    public void setFigura(PFigura node)
    {
        if(this._figura_ != null)
        {
            this._figura_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._figura_ = node;
    }

    public PFig1 getFig1()
    {
        return this._fig1_;
    }

    public void setFig1(PFig1 node)
    {
        if(this._fig1_ != null)
        {
            this._fig1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fig1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._figura_)
            + toString(this._fig1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._figura_ == child)
        {
            this._figura_ = null;
            return;
        }

        if(this._fig1_ == child)
        {
            this._fig1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._figura_ == oldChild)
        {
            setFigura((PFigura) newChild);
            return;
        }

        if(this._fig1_ == oldChild)
        {
            setFig1((PFig1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
