/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.node;

import postfix.analysis.*;

@SuppressWarnings("nls")
public final class ACoorcx extends PCoorcx
{
    private TCx _cx_;
    private TIg _ig_;
    private PNum _num_;

    public ACoorcx()
    {
        // Constructor
    }

    public ACoorcx(
        @SuppressWarnings("hiding") TCx _cx_,
        @SuppressWarnings("hiding") TIg _ig_,
        @SuppressWarnings("hiding") PNum _num_)
    {
        // Constructor
        setCx(_cx_);

        setIg(_ig_);

        setNum(_num_);

    }

    @Override
    public Object clone()
    {
        return new ACoorcx(
            cloneNode(this._cx_),
            cloneNode(this._ig_),
            cloneNode(this._num_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACoorcx(this);
    }

    public TCx getCx()
    {
        return this._cx_;
    }

    public void setCx(TCx node)
    {
        if(this._cx_ != null)
        {
            this._cx_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cx_ = node;
    }

    public TIg getIg()
    {
        return this._ig_;
    }

    public void setIg(TIg node)
    {
        if(this._ig_ != null)
        {
            this._ig_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ig_ = node;
    }

    public PNum getNum()
    {
        return this._num_;
    }

    public void setNum(PNum node)
    {
        if(this._num_ != null)
        {
            this._num_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._num_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cx_)
            + toString(this._ig_)
            + toString(this._num_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cx_ == child)
        {
            this._cx_ = null;
            return;
        }

        if(this._ig_ == child)
        {
            this._ig_ = null;
            return;
        }

        if(this._num_ == child)
        {
            this._num_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cx_ == oldChild)
        {
            setCx((TCx) newChild);
            return;
        }

        if(this._ig_ == oldChild)
        {
            setIg((TIg) newChild);
            return;
        }

        if(this._num_ == oldChild)
        {
            setNum((PNum) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
