/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.analysis;

import java.util.*;
import postfix.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStart(AStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPr(AAPr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABPr(ABPr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPr1(AAPr1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABPr1(ABPr1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAA(AAA node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABA(ABA node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACA(ACA node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADA(ADA node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEA(AEA node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFA(AFA node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAL1(AL1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAC1(AC1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAR1(AR1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE1(AE1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANum(ANum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP(AP node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAP0(AAP0 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABP0(ABP0 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAP1(AP1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAS(AAS node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABS(ABS node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASp1(AASp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABSp1(ABSp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASp2(AASp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABSp2(ABSp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASp3(AASp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABSp3(ABSp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACSp3(ACSp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASp4(AASp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABSp4(ABSp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACSp4(ACSp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTN(TN node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSvg1(TSvg1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSvg2(TSvg2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMayus(TMayus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCo(TCo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIg(TIg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLine(TLine node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCircle(TCircle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRect(TRect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEllipse(TEllipse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPolygon(TPolygon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPolyline(TPolyline node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTX1(TX1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTY1(TY1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTX2(TX2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTY2(TY2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCx(TCx node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCy(TCy node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTR0(TR0 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTX0(TX0 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTY0(TY0 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWidth(TWidth node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHeight(THeight node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRx(TRx node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRy(TRy node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPoints(TPoints node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComa(TComa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStyle(TStyle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFill(TFill node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStroke(TStroke node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStrokew(TStrokew node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTC0(TC0 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPc(TPc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDosp(TDosp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
