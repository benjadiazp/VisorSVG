/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.analysis;

import postfix.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAAStart(AAStart node);
    void caseABStart(ABStart node);
    void caseADim(ADim node);
    void caseAAPr(AAPr node);
    void caseABPr(ABPr node);
    void caseACPr(ACPr node);
    void caseAAPr1(AAPr1 node);
    void caseABPr1(ABPr1 node);
    void caseACPr1(ACPr1 node);
    void caseAAMayus0(AAMayus0 node);
    void caseABMayus0(ABMayus0 node);
    void caseAFig1(AFig1 node);
    void caseAAFig0(AAFig0 node);
    void caseABFig0(ABFig0 node);
    void caseACFig0(ACFig0 node);
    void caseADFig0(ADFig0 node);
    void caseAEFig0(AEFig0 node);
    void caseAFFig0(AFFig0 node);
    void caseAAF(AAF node);
    void caseABF(ABF node);
    void caseACF(ACF node);
    void caseADF(ADF node);
    void caseAEF(AEF node);
    void caseAFF(AFF node);
    void caseAAAtt(AAAtt node);
    void caseABAtt(ABAtt node);
    void caseAAAtt0(AAAtt0 node);
    void caseABAtt0(ABAtt0 node);
    void caseACAtt0(ACAtt0 node);
    void caseAAL1(AAL1 node);
    void caseABL1(ABL1 node);
    void caseACL1(ACL1 node);
    void caseADL1(ADL1 node);
    void caseAL0(AL0 node);
    void caseAAC1(AAC1 node);
    void caseABC1(ABC1 node);
    void caseACC1(ACC1 node);
    void caseADC1(ADC1 node);
    void caseAC2(AC2 node);
    void caseAAR1(AAR1 node);
    void caseABR1(ABR1 node);
    void caseACR1(ACR1 node);
    void caseADR1(ADR1 node);
    void caseAR2(AR2 node);
    void caseAAE1(AAE1 node);
    void caseABE1(ABE1 node);
    void caseACE1(ACE1 node);
    void caseADE1(ADE1 node);
    void caseAE0(AE0 node);
    void caseANum(ANum node);
    void caseAAP(AAP node);
    void caseABP(ABP node);
    void caseACP(ACP node);
    void caseAP3(AP3 node);
    void caseAAP0(AAP0 node);
    void caseABP0(ABP0 node);
    void caseAP1(AP1 node);
    void caseAS(AS node);
    void caseAASp(AASp node);
    void caseABSp(ABSp node);
    void caseAASp0(AASp0 node);
    void caseABSp0(ABSp0 node);
    void caseACSp0(ACSp0 node);

    void caseTN(TN node);
    void caseTBlank(TBlank node);
    void caseTSvg1(TSvg1 node);
    void caseTSvg2(TSvg2 node);
    void caseTMinus(TMinus node);
    void caseTMayus(TMayus node);
    void caseTCo(TCo node);
    void caseTIg(TIg node);
    void caseTSl(TSl node);
    void caseTLine(TLine node);
    void caseTCircle(TCircle node);
    void caseTRect(TRect node);
    void caseTEllipse(TEllipse node);
    void caseTPolygon(TPolygon node);
    void caseTPolyline(TPolyline node);
    void caseTX1(TX1 node);
    void caseTY1(TY1 node);
    void caseTX2(TX2 node);
    void caseTY2(TY2 node);
    void caseTCx(TCx node);
    void caseTCy(TCy node);
    void caseTR0(TR0 node);
    void caseTX0(TX0 node);
    void caseTY0(TY0 node);
    void caseTWidth(TWidth node);
    void caseTHeight(THeight node);
    void caseTRx(TRx node);
    void caseTRy(TRy node);
    void caseTPoints(TPoints node);
    void caseTComa(TComa node);
    void caseTStyle(TStyle node);
    void caseTFill(TFill node);
    void caseTStroke(TStroke node);
    void caseTStrokew(TStrokew node);
    void caseTC0(TC0 node);
    void caseTPc(TPc node);
    void caseTDosp(TDosp node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
