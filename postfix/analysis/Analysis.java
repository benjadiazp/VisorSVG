/* This file was generated by SableCC (http://www.sablecc.org/). */

package postfix.analysis;

import postfix.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAStart(AStart node);
    void caseAAPr(AAPr node);
    void caseABPr(ABPr node);
    void caseAAPr1(AAPr1 node);
    void caseABPr1(ABPr1 node);
    void caseAAA(AAA node);
    void caseABA(ABA node);
    void caseACA(ACA node);
    void caseADA(ADA node);
    void caseAEA(AEA node);
    void caseAFA(AFA node);
    void caseAL1(AL1 node);
    void caseAC1(AC1 node);
    void caseAR1(AR1 node);
    void caseAE1(AE1 node);
    void caseANum(ANum node);
    void caseAP(AP node);
    void caseAAP0(AAP0 node);
    void caseABP0(ABP0 node);
    void caseAP1(AP1 node);
    void caseAAS(AAS node);
    void caseABS(ABS node);
    void caseAASp1(AASp1 node);
    void caseABSp1(ABSp1 node);
    void caseAASp2(AASp2 node);
    void caseABSp2(ABSp2 node);
    void caseAASp3(AASp3 node);
    void caseABSp3(ABSp3 node);
    void caseACSp3(ACSp3 node);
    void caseAASp4(AASp4 node);
    void caseABSp4(ABSp4 node);
    void caseACSp4(ACSp4 node);

    void caseTN(TN node);
    void caseTBlank(TBlank node);
    void caseTSvg1(TSvg1 node);
    void caseTSvg2(TSvg2 node);
    void caseTMinus(TMinus node);
    void caseTMayus(TMayus node);
    void caseTCo(TCo node);
    void caseTIg(TIg node);
    void caseTLine(TLine node);
    void caseTCircle(TCircle node);
    void caseTRect(TRect node);
    void caseTEllipse(TEllipse node);
    void caseTPolygon(TPolygon node);
    void caseTPolyline(TPolyline node);
    void caseTX1(TX1 node);
    void caseTY1(TY1 node);
    void caseTX2(TX2 node);
    void caseTY2(TY2 node);
    void caseTCx(TCx node);
    void caseTCy(TCy node);
    void caseTR0(TR0 node);
    void caseTX0(TX0 node);
    void caseTY0(TY0 node);
    void caseTWidth(TWidth node);
    void caseTHeight(THeight node);
    void caseTRx(TRx node);
    void caseTRy(TRy node);
    void caseTPoints(TPoints node);
    void caseTComa(TComa node);
    void caseTStyle(TStyle node);
    void caseTFill(TFill node);
    void caseTStroke(TStroke node);
    void caseTStrokew(TStrokew node);
    void caseTC0(TC0 node);
    void caseTPc(TPc node);
    void caseTDosp(TDosp node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
